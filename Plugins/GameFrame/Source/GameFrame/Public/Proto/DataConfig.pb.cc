// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataConfig.proto

#include "DataConfig.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace pb {
PROTOBUF_CONSTEXPR GuiConfig_UIItem::GuiConfig_UIItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.layout_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_.layer_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GuiConfig_UIItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GuiConfig_UIItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GuiConfig_UIItemDefaultTypeInternal() {}
  union {
    GuiConfig_UIItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GuiConfig_UIItemDefaultTypeInternal _GuiConfig_UIItem_default_instance_;
PROTOBUF_CONSTEXPR GuiConfig_ItemMapEntry_DoNotUse::GuiConfig_ItemMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct GuiConfig_ItemMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GuiConfig_ItemMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GuiConfig_ItemMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GuiConfig_ItemMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GuiConfig_ItemMapEntry_DoNotUseDefaultTypeInternal _GuiConfig_ItemMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR GuiConfig::GuiConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GuiConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GuiConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GuiConfigDefaultTypeInternal() {}
  union {
    GuiConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GuiConfigDefaultTypeInternal _GuiConfig_default_instance_;
PROTOBUF_CONSTEXPR BPConfig_ItemMapEntry_DoNotUse::BPConfig_ItemMapEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct BPConfig_ItemMapEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BPConfig_ItemMapEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BPConfig_ItemMapEntry_DoNotUseDefaultTypeInternal() {}
  union {
    BPConfig_ItemMapEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BPConfig_ItemMapEntry_DoNotUseDefaultTypeInternal _BPConfig_ItemMapEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR BPConfig::BPConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_map_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BPConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BPConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BPConfigDefaultTypeInternal() {}
  union {
    BPConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BPConfigDefaultTypeInternal _BPConfig_default_instance_;
}  // namespace pb
static ::_pb::Metadata file_level_metadata_DataConfig_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_DataConfig_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_DataConfig_2eproto = nullptr;

const uint32_t TableStruct_DataConfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_UIItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_UIItem, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_UIItem, _impl_.layout_),
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_UIItem, _impl_.layer_),
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_ItemMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_ItemMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_ItemMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig_ItemMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::GuiConfig, _impl_.item_map_),
  PROTOBUF_FIELD_OFFSET(::pb::BPConfig_ItemMapEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pb::BPConfig_ItemMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::BPConfig_ItemMapEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::pb::BPConfig_ItemMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::BPConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::BPConfig, _impl_.item_map_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pb::GuiConfig_UIItem)},
  { 9, 17, -1, sizeof(::pb::GuiConfig_ItemMapEntry_DoNotUse)},
  { 19, -1, -1, sizeof(::pb::GuiConfig)},
  { 26, 34, -1, sizeof(::pb::BPConfig_ItemMapEntry_DoNotUse)},
  { 36, -1, -1, sizeof(::pb::BPConfig)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::pb::_GuiConfig_UIItem_default_instance_._instance,
  &::pb::_GuiConfig_ItemMapEntry_DoNotUse_default_instance_._instance,
  &::pb::_GuiConfig_default_instance_._instance,
  &::pb::_BPConfig_ItemMapEntry_DoNotUse_default_instance_._instance,
  &::pb::_BPConfig_default_instance_._instance,
};

const char descriptor_table_protodef_DataConfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020DataConfig.proto\022\002pb\"\264\001\n\tGuiConfig\022,\n\010"
  "item_map\030\001 \003(\0132\032.pb.GuiConfig.ItemMapEnt"
  "ry\0323\n\006UIItem\022\n\n\002id\030\001 \001(\005\022\016\n\006layout\030\003 \001(\t"
  "\022\r\n\005layer\030\004 \001(\005\032D\n\014ItemMapEntry\022\013\n\003key\030\001"
  " \001(\t\022#\n\005value\030\002 \001(\0132\024.pb.GuiConfig.UIIte"
  "m:\0028\001\"g\n\010BPConfig\022+\n\010item_map\030\001 \003(\0132\031.pb"
  ".BPConfig.ItemMapEntry\032.\n\014ItemMapEntry\022\013"
  "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001B\006Z\004.;pbb\006"
  "proto3"
  ;
static ::_pbi::once_flag descriptor_table_DataConfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_DataConfig_2eproto = {
    false, false, 326, descriptor_table_protodef_DataConfig_2eproto,
    "DataConfig.proto",
    &descriptor_table_DataConfig_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_DataConfig_2eproto::offsets,
    file_level_metadata_DataConfig_2eproto, file_level_enum_descriptors_DataConfig_2eproto,
    file_level_service_descriptors_DataConfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_DataConfig_2eproto_getter() {
  return &descriptor_table_DataConfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_DataConfig_2eproto(&descriptor_table_DataConfig_2eproto);
namespace pb {

// ===================================================================

class GuiConfig_UIItem::_Internal {
 public:
};

GuiConfig_UIItem::GuiConfig_UIItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.GuiConfig.UIItem)
}
GuiConfig_UIItem::GuiConfig_UIItem(const GuiConfig_UIItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GuiConfig_UIItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.layout_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.layer_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.layout_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.layout_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_layout().empty()) {
    _this->_impl_.layout_.Set(from._internal_layout(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.layer_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.layer_));
  // @@protoc_insertion_point(copy_constructor:pb.GuiConfig.UIItem)
}

inline void GuiConfig_UIItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.layout_){}
    , decltype(_impl_.id_){0}
    , decltype(_impl_.layer_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.layout_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.layout_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GuiConfig_UIItem::~GuiConfig_UIItem() {
  // @@protoc_insertion_point(destructor:pb.GuiConfig.UIItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GuiConfig_UIItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.layout_.Destroy();
}

void GuiConfig_UIItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GuiConfig_UIItem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GuiConfig.UIItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.layout_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.layer_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.layer_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GuiConfig_UIItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string layout = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_layout();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.GuiConfig.UIItem.layout"));
        } else
          goto handle_unusual;
        continue;
      // int32 layer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.layer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GuiConfig_UIItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.GuiConfig.UIItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string layout = 3;
  if (!this->_internal_layout().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_layout().data(), static_cast<int>(this->_internal_layout().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.GuiConfig.UIItem.layout");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_layout(), target);
  }

  // int32 layer = 4;
  if (this->_internal_layer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_layer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GuiConfig.UIItem)
  return target;
}

size_t GuiConfig_UIItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GuiConfig.UIItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string layout = 3;
  if (!this->_internal_layout().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_layout());
  }

  // int32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  // int32 layer = 4;
  if (this->_internal_layer() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_layer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GuiConfig_UIItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GuiConfig_UIItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GuiConfig_UIItem::GetClassData() const { return &_class_data_; }


void GuiConfig_UIItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GuiConfig_UIItem*>(&to_msg);
  auto& from = static_cast<const GuiConfig_UIItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.GuiConfig.UIItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_layout().empty()) {
    _this->_internal_set_layout(from._internal_layout());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_layer() != 0) {
    _this->_internal_set_layer(from._internal_layer());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GuiConfig_UIItem::CopyFrom(const GuiConfig_UIItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GuiConfig.UIItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuiConfig_UIItem::IsInitialized() const {
  return true;
}

void GuiConfig_UIItem::InternalSwap(GuiConfig_UIItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.layout_, lhs_arena,
      &other->_impl_.layout_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GuiConfig_UIItem, _impl_.layer_)
      + sizeof(GuiConfig_UIItem::_impl_.layer_)
      - PROTOBUF_FIELD_OFFSET(GuiConfig_UIItem, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GuiConfig_UIItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DataConfig_2eproto_getter, &descriptor_table_DataConfig_2eproto_once,
      file_level_metadata_DataConfig_2eproto[0]);
}

// ===================================================================

GuiConfig_ItemMapEntry_DoNotUse::GuiConfig_ItemMapEntry_DoNotUse() {}
GuiConfig_ItemMapEntry_DoNotUse::GuiConfig_ItemMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GuiConfig_ItemMapEntry_DoNotUse::MergeFrom(const GuiConfig_ItemMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GuiConfig_ItemMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DataConfig_2eproto_getter, &descriptor_table_DataConfig_2eproto_once,
      file_level_metadata_DataConfig_2eproto[1]);
}

// ===================================================================

class GuiConfig::_Internal {
 public:
};

GuiConfig::GuiConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &GuiConfig::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:pb.GuiConfig)
}
GuiConfig::GuiConfig(const GuiConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GuiConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.item_map_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_map_.MergeFrom(from._impl_.item_map_);
  // @@protoc_insertion_point(copy_constructor:pb.GuiConfig)
}

inline void GuiConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.item_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GuiConfig::~GuiConfig() {
  // @@protoc_insertion_point(destructor:pb.GuiConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void GuiConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_map_.Destruct();
  _impl_.item_map_.~MapField();
}

void GuiConfig::ArenaDtor(void* object) {
  GuiConfig* _this = reinterpret_cast< GuiConfig* >(object);
  _this->_impl_.item_map_.Destruct();
}
void GuiConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GuiConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GuiConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_map_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GuiConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .pb.GuiConfig.UIItem> item_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.item_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GuiConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.GuiConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .pb.GuiConfig.UIItem> item_map = 1;
  if (!this->_internal_item_map().empty()) {
    using MapType = ::_pb::Map<std::string, ::pb::GuiConfig_UIItem>;
    using WireHelper = GuiConfig_ItemMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_item_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "pb.GuiConfig.ItemMapEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GuiConfig)
  return target;
}

size_t GuiConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GuiConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .pb.GuiConfig.UIItem> item_map = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_item_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::pb::GuiConfig_UIItem >::const_iterator
      it = this->_internal_item_map().begin();
      it != this->_internal_item_map().end(); ++it) {
    total_size += GuiConfig_ItemMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GuiConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GuiConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GuiConfig::GetClassData() const { return &_class_data_; }


void GuiConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GuiConfig*>(&to_msg);
  auto& from = static_cast<const GuiConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.GuiConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.item_map_.MergeFrom(from._impl_.item_map_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GuiConfig::CopyFrom(const GuiConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GuiConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuiConfig::IsInitialized() const {
  return true;
}

void GuiConfig::InternalSwap(GuiConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_map_.InternalSwap(&other->_impl_.item_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GuiConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DataConfig_2eproto_getter, &descriptor_table_DataConfig_2eproto_once,
      file_level_metadata_DataConfig_2eproto[2]);
}

// ===================================================================

BPConfig_ItemMapEntry_DoNotUse::BPConfig_ItemMapEntry_DoNotUse() {}
BPConfig_ItemMapEntry_DoNotUse::BPConfig_ItemMapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void BPConfig_ItemMapEntry_DoNotUse::MergeFrom(const BPConfig_ItemMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata BPConfig_ItemMapEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DataConfig_2eproto_getter, &descriptor_table_DataConfig_2eproto_once,
      file_level_metadata_DataConfig_2eproto[3]);
}

// ===================================================================

class BPConfig::_Internal {
 public:
};

BPConfig::BPConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &BPConfig::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:pb.BPConfig)
}
BPConfig::BPConfig(const BPConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BPConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.item_map_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.item_map_.MergeFrom(from._impl_.item_map_);
  // @@protoc_insertion_point(copy_constructor:pb.BPConfig)
}

inline void BPConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.item_map_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BPConfig::~BPConfig() {
  // @@protoc_insertion_point(destructor:pb.BPConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void BPConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_map_.Destruct();
  _impl_.item_map_.~MapField();
}

void BPConfig::ArenaDtor(void* object) {
  BPConfig* _this = reinterpret_cast< BPConfig* >(object);
  _this->_impl_.item_map_.Destruct();
}
void BPConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BPConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.BPConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_map_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BPConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, string> item_map = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.item_map_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BPConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.BPConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> item_map = 1;
  if (!this->_internal_item_map().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = BPConfig_ItemMapEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_item_map();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "pb.BPConfig.ItemMapEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "pb.BPConfig.ItemMapEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.BPConfig)
  return target;
}

size_t BPConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.BPConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> item_map = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_item_map_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_item_map().begin();
      it != this->_internal_item_map().end(); ++it) {
    total_size += BPConfig_ItemMapEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BPConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BPConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BPConfig::GetClassData() const { return &_class_data_; }


void BPConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BPConfig*>(&to_msg);
  auto& from = static_cast<const BPConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.BPConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.item_map_.MergeFrom(from._impl_.item_map_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BPConfig::CopyFrom(const BPConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.BPConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BPConfig::IsInitialized() const {
  return true;
}

void BPConfig::InternalSwap(BPConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_map_.InternalSwap(&other->_impl_.item_map_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BPConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_DataConfig_2eproto_getter, &descriptor_table_DataConfig_2eproto_once,
      file_level_metadata_DataConfig_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::GuiConfig_UIItem*
Arena::CreateMaybeMessage< ::pb::GuiConfig_UIItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::GuiConfig_UIItem >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::GuiConfig_ItemMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::pb::GuiConfig_ItemMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::GuiConfig_ItemMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::GuiConfig*
Arena::CreateMaybeMessage< ::pb::GuiConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::GuiConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::BPConfig_ItemMapEntry_DoNotUse*
Arena::CreateMaybeMessage< ::pb::BPConfig_ItemMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::BPConfig_ItemMapEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::BPConfig*
Arena::CreateMaybeMessage< ::pb::BPConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::BPConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
